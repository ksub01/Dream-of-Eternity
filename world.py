from colorama import Fore, Style
from progress.bar import FillingCirclesBar, FillingSquaresBar

import information


class Creature:
    """–∂–∏–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ"""

    def __init__(self):
        self.exp_to_lvl = None
        self.full_heart = 0
        self.heart = 0
        self.full_attack = 0
        self.attack = 0
        self.full_force = 0
        self.force = 0
        self.full_defence = 0
        self.defence = 0
        self.full_dexterity = 0
        self.dexterity = 0
        self.full_wisdom = 0
        self.wisdom = 0
        self.lvl = 0
        self.exp = 0
        self.gold = 0
        self.target = ''
        self.sign = ''

    def recovery_parameter(self):
        """–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –ø–æ —Ö–æ–¥—É –±–∏—Ç–≤—ã"""
        self.heart = self.full_heart
        self.attack = self.full_attack
        self.force = self.full_force
        self.defence = self.full_defence
        self.dexterity = self.full_dexterity
        self.wisdom = self.full_wisdom

    def alive(self):
        return self.heart > 0

    def progress_exp(self):
        """–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–æ—Ä–æ–≤—å—è –≤ –≤–∏–¥–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞"""
        s = '{}{}'.format(Fore.BLUE, 'üìñ')
        lvl = self.lvl
        exp_for_next = self.exp_to_lvl[lvl] - self.exp_to_lvl[lvl-1]
        bar = FillingCirclesBar(s, max=exp_for_next)
        bar.index = self.exp - self.exp_to_lvl[lvl-1]
        bar.update()
        print()

    def progress_hp(self):
        """–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–æ—Ä–æ–≤—å—è –≤ –≤–∏–¥–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞"""
        s = '{}{}'.format(Fore.RED, '‚ù§ ')
        bar = FillingSquaresBar(s, max=self.full_heart)
        bar.index = self.heart
        bar.update()
        print()

    def parameters(self):
        """–û—Ç—Ä–∞–∂–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≥–µ—Ä–æ—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ –≥–µ—Ä–æ—è"""
        print(Style.RESET_ALL + '‚îÄ' * 40)
        print(Fore.WHITE + Style.BRIGHT + "–£—Ä–æ–≤–µ–Ω—å {}".format(self.lvl), end='  ')
        print(Fore.MAGENTA + self.sign)
        self.progress_hp()
        self.progress_exp()
        print(Fore.YELLOW + 'ü™ô {}'.format(self.gold), end='  ')
        print(Fore.BLUE + "‚öî {}".format(self.attack), end='  ')
        print(Fore.LIGHTBLUE_EX + Style.DIM + 'üëä {}'.format(self.force), end='  ')
        print(Fore.LIGHTMAGENTA_EX + 'üõ° {}'.format(self.defence), end='  ')
        print(Fore.GREEN + 'ü•æ {}'.format(self.dexterity), end='  ')
        print(Fore.LIGHTBLUE_EX + Style.DIM + 'üß† {}'.format(self.wisdom))
        print('‚îÄ' * 40 + '\n')

    def gold_spending(self, gold):
        """–í —Ñ—É–∫–Ω—Ü–∏—é –ø–µ—Ä–µ–¥–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∑–æ–ª–æ—Ç–∞, –∫–æ—Ç–æ—Ä–æ–µ —Ç—Ä–∞—Ç–∏—Ç –∏–≥—Ä–æ–∫, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç, –ø–æ–ª—É—á–∏—Ç—Å—è –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –∏–ª–∏ –Ω–µ—Ç"""
        # –µ—Å–ª–∏ –∑–æ–ª–æ—Ç–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ
        if self.gold >= gold:
            print(Fore.YELLOW + self.target + ' -{}ü™ô'.format(gold))
            self.gold -= gold
            return 1
        else:
            print(self.target + ' –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞')
            return 0

    def gold_receive(self, gold):
        """–í —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–¥–∞—ë–º –∑–Ω–∞—á–µ–Ω–∏–µ –∑–æ–ª–æ—Ç–∞, –∫–æ—Ç–æ—Ä–æ–µ –∏–≥—Ä–æ–∫ –ø–æ–ª—É—á–∞–µ—Ç"""
        print(self.target + ' +{}ü™ô'.format(gold))
        self.gold += gold

    def attack_new(self, attack):
        """–ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ç–∞–∫–∏"""
        ans = self.attack - attack
        if ans >= 0:
            print(self.target + ' +{}‚öî'.format(ans))
        else:
            print(self.target + ' -{}‚öî'.format(-ans))
        self.attack = attack

    def defence_new(self, defence):
        """–ì–µ—Ä–æ–π –ø–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—Ä–æ–Ω–∏, –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∏–≥–¥–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è"""
        """–ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∞—Ç–∞–∫–∏"""
        ans = self.defence - defence
        if ans >= 0:
            print(self.target + ' +{}üõ°'.format(ans))
        else:
            print(self.target + ' -{}üõ°'.format(-ans))
        self.defence = defence

    def heart_new(self, heart):
        """–í —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–¥–∞—ë–º –∑–Ω–∞—á–µ–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è, –∫–æ—Ç–æ—Ä–æ–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —É –∏–≥—Ä–æ–∫–∞. –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –ø—Ä–æ—à–ª—ã–º –∏ –±—É–¥—É—é—â–∏–º
        –∑–¥–æ—Ä–æ–≤—å–µ–º"""
        ans = self.heart - heart
        if ans >= 0:
            print(self.target + ' +{}‚ô•'.format(ans))
        else:
            print(self.target + ' -{}‚ô•'.format(-ans))
        self.defence = heart

    def exp_receive(self, exp):
        """–í —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–¥–∞—ë–º –∑–Ω–∞—á–µ–Ω–∏–µ –æ–ø—ã—Ç–∞, –∫–æ—Ç–æ—Ä–æ–µ –∏–≥—Ä–æ–∫ –ø–æ–ª—É—á–∞–µ—Ç"""
        self.exp += exp
        print(Fore.BLUE + self.target + ' +{} üìñ'.format(exp))

    def heart_upgrade(self, heart):
        """–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è –Ω–∞ –¥–∞–Ω–Ω—É—é –≤–µ–ª–µ—á–∏–Ω—É"""
        self.full_heart += heart
        print(self.target + ' +{}üíô'.format(heart))
        information.pause()

    def force_upgrade(self, force):
        """–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–ª—ã –∏–≥—Ä–æ–∫–∞ –Ω–∞ –¥–∞–Ω–Ω—É—é –≤–µ–ª–µ—á–∏–Ω—É"""
        self.full_force += force
        print(self.target + ' +{}üëä'.format(force))
        information.pause()

    def dexterity_upgrade(self, dexterity):
        """–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ–≤–∫–æ—Å—Ç–∏ –∏–≥—Ä–æ–∫–∞ –Ω–∞ –¥–∞–Ω–Ω—É—é –≤–µ–ª–µ—á–∏–Ω—É"""
        self.full_dexterity += dexterity
        print(self.target + ' +{}ü•æ'.format(dexterity))
        information.pause()

    def wisdom_upgrade(self, wisdom):
        """–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º—É–¥—Ä–æ—Å—Ç–∏ –∏–≥—Ä–æ–∫–∞ –Ω–∞ –¥–∞–Ω–Ω—É—é –≤–µ–ª–µ—á–∏–Ω—É"""
        self.full_wisdom += wisdom
        print(self.target + ' +{}üß†'.format(wisdom))
        information.pause()
