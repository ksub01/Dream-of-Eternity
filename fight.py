"""–§—É–Ω–∫—Ü–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–π –æ–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –º–µ—Ö–∞–Ω–∏–∫–∞ –±–æ—è"""

from colorama import Fore, Style
from progress.spinner import Spinner
import time

import hero
import random
import monsters
import inventory
import effects
import information


def dungeon():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞—Ö–æ–¥–µ –≤ –ª–µ—Å, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫—É–¥–∞ –º–æ–∂–Ω–æ –ø–æ–π—Ç–∏, –ø–æ–∫–∞ —Å–¥–µ–ª–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–∞—è –ª–æ–∫–∞—Ü–∏—è."""
    while True:
        choice_location = input('–ö—É–¥–∞ –≤—ã –ø–æ—ë–¥–µ—Ç–µ?:'
                                '–õ–µ—Å –°–º–µ—Ä—Ç–∏ => 1\n'
                                '–í–µ—Ä–Ω—É—Ç—å—Å—è => 2')
        if choice_location == '1':
            print("–í—ã –ø–æ–ø–∞–¥–∞–µ—Ç–µ –≤ –ª–µ—Å –°–º–µ—Ä—Ç–∏")
            # –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–ª–∏—á–∏–µ —è–¥–∞, –ø–æ–∫–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø–µ—Ä–≤–∞—è –º–∏—Å—Å–∏—è, –ø–æ—Ç–æ–º –ø—Ä–æ—Ç–∏–≤–æ—è–¥–∏–µ —Å—Ç–∞–Ω–µ—Ç —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–æ–º
            # –ø–æ–∫—É–ø–∞–µ–º—ã–º –∑–∞ –¥–µ–Ω—å–≥–∏
            print('–Ø–¥ –í–∞—Ä–≥–∞–Ω–∏—Å–∞ –º–µ—à–∞–µ—Ç –≤–∞–º –ø—Ä–æ–π—Ç–∏ –≤–≥–ª—É–±—å, –Ω–æ —Å–ø–æ—Å–æ–±–æ—Å—Ç—å –≥–µ—Ä–æ—è –ú—Ä–∞–∫–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —É –≤—Ö–æ–¥–∞\n'
                  '–≤ –ª–µ—Å, –≥–¥–µ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏ —è–¥–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞, –ø—Ä–∏–ª–∏—á–Ω–æ–µ –≤—Ä–µ–º—è –∏ –±–µ–∑ –æ—Å–æ–±—ã—Ö –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π')
            # –¢—Ä–∏ –º–æ–Ω—Å—Ç—Ä–∞ –Ω–∞ –æ–¥–∏–Ω —É—Ä–æ–≤–µ–Ω—å –∏–≥—Ä–æ–∫–∞
            choice_monster = hero.parameter['lvl'] * 3
            # –∑–∞–≥–ª—É—à–∫–∞ –Ω–∞ —à–µ—Å—Ç—å –º–æ–Ω—Å—Ç—Ä–æ–≤ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—Å–∏–ª—Å—è –ø–æ—Ä–æ–≥ –º–æ–Ω—Å—Ç—Ä–æ–≤
            if choice_monster > 6:
                choice_monster = 6
            # —Ä—É–ª–µ—Ç–∫–∞ –ø–æ –≤—Å–µ–º –º–æ–Ω—Å—Ç—Ä–∞–º –¥–∞–Ω–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏
            what_monster = random.randint(1, choice_monster)
            # –∑–∞–ø—É—Å–∫ –±–æ—è —Å –º–æ–Ω—Å—Ç—Ä–æ–º
            fighting(monsters.monsters[what_monster], effects.dragon_time())
            break
        else:
            break


def start_message():
    """–°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –±–æ—è"""
    print(Style.RESET_ALL + '‚îÄ'*50)
    print(Fore.RED + "                 –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –±–æ–π")
    print('‚îÄ'*50)


def fighting(name, what_event):
    """–§—É–Ω–∫—Ü–∏—è –±–æ—è. –ü–µ—Ä–µ–¥–∞—ë–º —Å–ª–æ–≤–∞—Ä—å –º–æ–Ω—Å—Ç—Ä–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –ø–µ—Ä–µ–¥–∞—á—É —Å–∏–ª—ã –û–∑–∏—Ä–∏—Å–∞ –ª–µ—Å—É, –∫–æ—Ç–æ—Ä–∞—è —Ç—è–Ω–µ—Ç—Å—è —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞
    –ø—Ä–æ–≥—Ä–∞–º–º—ã. –ü–æ—Å–ª–µ –¥–µ–π—Å—Ç–≤–∏—è –∞—Ç–∞–∫–∏ –∏–≥—Ä–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∏–ª–∏ –∫ –Ω–∞–≥—Ä–∞–¥–µ –∏–ª–∏ –∫ —Å–º–µ—Ä—Ç–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–º –∏–≥—Ä–∞–Ω–µ"""

    # –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞—Ç–∞–∫–∏ –∏ –∑–¥–æ—Ä–æ–≤—å—è –º–æ–Ω—Å—Ç—Ä–∞ –ø–æ–¥ –¥–µ–π—Å—Ç–≤–∏–µ–º –û–∑–∏—Ä–∏—Å–∞
    monsters.monster_heart_new(name, name['full_heart'] * what_event)
    monsters.monster_recovery_attack(name, name['full_attack'] * what_event)
    hero.defence_save(hero.parameter['defence'])
    hero.skill_count_fill()
    hero.statistics_up_battle1()
    start_message()
    while hero.alive() and name['heart'] > 0:
        hero.skills_clear()
        information.parameters()
        monster_information(name)
        print('\n‚öî  ‚ûî 1\n'
              'üèÉ ‚ûî 2')
        display_skills()
        choice = input()
        if choice == '1':
            who_first_attack(name)
            information.pause()
        elif choice == '2':
            if escape(name) == 1:
                break
        else:
            if choice.isdigit():
                using_skills(int(choice), name)
    else:
        if name['heart'] <= 0:
            hero.statistics_up_kill(1)
            rewards(name, what_event)
        else:
            # –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ç.–∫. –º—ë—Ä—Ç–≤—ã–π
            pass


def display_skills():
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –Ω–∞–≤—ã–∫–∏ –∏ –ø—Ä–µ–¥–º–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –≥–µ—Ä–æ–π –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å. –ù–∞–≤—ã–∫–∏ –∏–∑–≤–ª–µ–∫–∞—é—Ç—Å—è –∏–∑ —Å–ø–∏—Å–∫–∞"""
    for (number, skills_name) in zip(range(3, 100000000), hero.count_active_skills):
        if hero.count_active_skills[skills_name] == 'full':
            print(skills_name, '->', number)
        else:
            print(skills_name, '*{}*'.format(hero.count_active_skills[skills_name]), '->', number)


def using_skills(number_skills, name_monster):
    """–§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –¥–∞—ë—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –Ω–∞–≤—ã–∫. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–∞–≤—ã–∫–∞ —Å–≤–æ–π –∫–æ–¥ –∏ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å
    –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è, –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —É–¥–∞—Ä"""
    # –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∫–æ–π —Å–∫–∏–ª–ª –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å
    for (number, skills) in zip(range(3, 100000000), hero.count_active_skills):
        if number == number_skills:
            hero.use_skill(skills, name_monster,
                           hero.count_active_skills[skills])
            information.pause()


def monster_information(name):
    """–§—É–Ω–∫—Ü–∏—è –≤—ã–¥–∞—ë—Ç –≤—Å—é –∏–Ω—Ñ—Ä–º–∞—Ü–∏—é –æ –º–æ–Ω—Å—Ç—Ä–µ –ø—Ä–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–π —Ä–∞–∑–Ω–∏—Ü–µ –≤ –º—É–¥—Ä–æ—Å—Ç–∏: —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ, –±–æ–ª—å—à–µ –Ω–∞ 5, –±–æ–ª—å—à–µ –Ω–∞ 10
    –ü–µ—Ä–µ–¥–∞—ë—Ç—Å—è: —Å–ª–æ–≤–∞—Ä—å –º–æ–Ω—Å—Ç—Ä–∞"""
    print(Fore.RED + name['name'] + ' üê∫')
    if hero.parameter['wisdom'] >= name['wisdom']:
        print("–£—Ä–æ–≤–µ–Ω—å: {}".format(name['lvl']))
    if hero.parameter['wisdom'] >= name['wisdom'] + 5:
        print("üñ§: {}\n–ê—Ç–∞–∫–∞: {}".format(name['heart'], name['attack']))
    if hero.parameter['wisdom'] >= name['wisdom'] + 10:
        print("‚õ®: {}\n–õ–æ–≤–∫–æ—Å—Ç—å: {}".format(name['defence'],
                                           name['dexterity']))
    if hero.parameter['wisdom'] >= name['wisdom'] + 15:
        print(name['property'])


def who_first_attack(name):
    """–û—Å–Ω–æ–≤–Ω–æ–π —Å—Ü–µ–Ω–∞—Ä–∏–π –∞—Ç–∞–∫–∏, –æ–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞, —Ç—É—Ç –Ω–∞ –∑–¥–æ—Ä–æ–≤—å–µ –≤–Ω–∏–º–∞–Ω–∏—è –º–æ–∂–Ω–æ –Ω–µ –æ–±—Ä–∞—â–∞—Ç—å. –ö—Ç–æ –ø–µ—Ä–≤—ã–º –±—å—ë—Ç –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç
     –ø—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≤–∫–æ—Å—Ç–∏
     –ü–µ—Ä–µ–¥–∞—ë—Ç—Å—è: —Å–ª–æ–≤–∞—Ä—å –º–æ–Ω—Å—Ç—Ä–∞"""
    if hero.parameter['dexterity'] < name['dexterity']:
        first_hit_monster(name)
    else:
        first_hit_hero(name)


def first_hit_hero(name):
    """–°—Ü–µ–Ω–∞—Ä–∏–π —É–¥–∞—Ä–∞, –µ—Å–ª–∏ –ø–µ—Ä–≤—ã–º –±—ä—ë—Ç –≥–µ—Ä–æ–π, —Ç–æ –µ—Å—Ç—å –ª–æ–≤–∫–æ—Å—Ç—å –≥–µ—Ä–æ—è –±–æ–ª—å—à–µ, –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è —Å–ª–æ–≤–∞—Ä—å –º–æ–Ω—Å—Ç—Ä–∞
    –ü–µ—Ä–µ–¥–∞—ë—Ç—Å—è: —Å–ª–æ–≤–∞—Ä—å –º–æ–Ω—Å—Ç—Ä–∞"""
    heroes_hit(name)
    if name['heart'] > 0:
        monsters_hit(name)


def first_hit_monster(name):
    """–°—Ü–µ–Ω–∞—Ä–∏–π —É–¥–∞—Ä–æ–≤, –µ—Å–ª–∏ –ø–µ—Ä–≤—ã–º –±—å—ë—Ç –º–æ–Ω—Å—Ç—Ä, , —Ç–æ –µ—Å—Ç—å –ª–æ–≤–∫–æ—Å—Ç—å –º–æ–Ω—Å—Ç—Ä–∞ –±–æ–ª—å—à–µ
    –ü–µ—Ä–µ–¥–∞—ë—Ç—Å—è: —Å–ª–æ–≤–∞—Ä—å –º–æ–Ω—Å—Ç—Ä–∞"""
    monsters_hit(name)
    if hero.parameter['heart'] > 0:
        heroes_hit(name)


def attack_monster(name):
    """–§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —É—Ä–æ–Ω –º–æ–Ω—Å—Ç—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –æ–Ω –Ω–∞–Ω–æ—Å–∏—Ç –≥–µ—Ä–æ—é, —Ñ—É–Ω–∫—Ü–∏—è —Ç–∞–∫–∂–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç—Ç–æ—Ç —É—Ä–æ–Ω,
    –Ω–æ –∑–∞—â–∏—Ç–∞ –º–æ–Ω—Å—Ç—Ä–∞ –±–ª–æ–∫–∏—Ä—É–µ—Ç –º–∞–∫—Å–∏–º—É–º 60%, –ø—Ä–æ–¥—É–º–∞–Ω–∞ —Ç–æ–ª—å–∫–æ
    –ü–µ—Ä–µ–¥–∞—ë—Ç—Å—è: —Å–ª–æ–≤–∞—Ä—å –º–æ–Ω—Å—Ç—Ä–∞"""
    if name['attack'] - hero.parameter['defence'] <= int(name['attack'] * 0.4):
        damage = int(name['attack'] * 0.4)
    else:
        damage = name['attack'] - hero.parameter['defence']
    if damage < 1:
        damage = 1
    return damage


def attack_hero(name):
    """–§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç —É—Ä–æ–Ω, –∫–æ—Ç–æ—Ä—ã–π –æ–Ω –Ω–∞–Ω–æ—Å–∏—Ç –≥–µ—Ä–æ–π, –Ω–æ –∑–∞—â–∏—Ç–∞ –º–æ–Ω—Å—Ç—Ä–∞ –±–ª–æ–∫–∏—Ä—É–µ—Ç –º–∞–∫—Å–∏–º—É–º 60%, –ø—Ä–æ–¥—É–º–∞–Ω–∞ —Ç–æ–ª—å–∫–æ
     –¥–ª—è –æ–¥–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞, —Ñ—É–Ω–∫—Ü–∏—è —Ç–∞–∫–∂–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç—Ç–æ—Ç —É—Ä–æ–Ω
     –ü–µ—Ä–µ–¥–∞—ë—Ç—Å—è: —Å–ª–æ–≤–∞—Ä—å –º–æ–Ω—Å—Ç—Ä–∞"""
    if 'force' in hero.parameter:
        if (hero.parameter['attack'] +
                hero.parameter['force'] - name['defence'] <=
                int(hero.parameter['attack'] +
                    hero.parameter['force'] * 0.4)):
            damage = int(name['attack'] * 0.4)
        else:
            damage = hero.parameter['attack'] + \
                     hero.parameter['force'] - name['defence']
        if damage < 1:
            damage = 1
        return damage



def effect_hit_hero():
    s = '{} {}{} '.format('üó°', Fore.GREEN, '')
    spinner = Spinner(s)
    for i in range(3):
        time.sleep(0.1)
        spinner.next()
    print(end=' ')


def effect_hit_monster():
    s = '{}{} '.format('üêæ', Fore.RED, '')
    spinner = Spinner(s)
    for i in range(3):
        time.sleep(0.1)
        spinner.next()
    print(end=' ')


def heroes_hit(name):
    """–¢–æ –∫–∞–∫ —Ä–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —É—Ä–æ–Ω –≥–µ—Ä–æ—è. –ø–æ—Å–ª–µ —á–µ–≥–æ –≤–∫–ª—é—á–∞—é—Ç—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —ç—Ñ—Ñ–µ–∫—Ç—ã. –≤ –±—É–¥—É—é—â–µ–º —É–¥–∞—Ä –≥–µ—Ä–æ—è,
     –∫–∞–∫ –∏ –º–æ–Ω—Å—Ç–∞ –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É, –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è —Å–ª–æ–≤–∞—Ä—å –º–æ–Ω—Å—Ç—Ä–∞"""
    # —Ä–∞–∑–±—Ä–æ—Å —É—Ä–æ–Ω–∞ 0.8 - 1.2
    effect_hit_hero()
    damage = int(effects.after_damage_in_monster(attack_hero(name)) * random.randint(8, 12) / 10)
    monsters.monster_spend_heart(name, damage)
    effects.past_damage_in_monster(name, damage)


def monsters_hit(name):
    """–¢–æ –∫–∞–∫ —Ä–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —É—Ä–æ–Ω –º–æ–Ω—Å—Ç—Ä–∞. —É—Ä–æ–Ω –º–æ–Ω—Å—Ç—Ä–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç –æ–±—Ä–∞–±–æ—Ç—É, –ø–æ—Å–ª–µ —á–µ–≥–æ –Ω–∞–Ω–æ—Å–∏—Ç—Å—è –ø–æ –≥–µ—Ä–æ—é, –ø–æ—Å–ª–µ —á–µ–≥–æ
     –≤–∫–ª—é—á–∞—é—Ç—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —ç—Ñ—Ñ–µ–∫—Ç—ã, –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è —Å–ª–æ–≤–∞—Ä—å –º–æ–Ω—Å—Ç—Ä–∞"""
    # —Ä–∞–∑–±—Ä–æ—Å —É—Ä–æ–Ω–∞ 0.8 - 1.2
    effect_hit_monster()
    damage = int(effects.after_damage_in_hero(attack_monster(name)) * random.randint(8, 12) / 10)
    hero.heart_spend(damage)
    effects.past_damage_in_hero(name)


def escape(name):
    """–ü–æ–±–µ–≥ –æ—Ç –º–æ–Ω—Å—Ç—Ä–∞, –≤—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 1 –µ—Å–ª–∏ –ø–æ–±–µ–≥ —É–¥–∞–ª—Å—è –∏ 0 –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª—Å—è"""
    print("–í—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å —Å–±–µ–∂–∞—Ç—å")
    information.pause()
    escape_from_monster = random.randint(1, 20)
    if escape_from_monster > 6:
        print("–í—ã —Å–±–µ–∂–∞–ª–∏")
        hero.defence_load()
        information.pause()
        return 1
    else:
        print("–í–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–±–µ–∂–∞—Ç—å")
        monsters_hit(name)
        information.pause()
        return 0


def rewards(name, event_dragon):
    """–§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞–≥—Ä–∞–∂–¥–∞–µ—Ç –∏–≥—Ä–æ–∫–∞.
    –ü–µ—Ä–µ–¥–∞—ë—Ç—Å—è: —Å–ª–æ–≤–∞—Ä—å –º–æ–Ω—Å—Ç—Ä–∞, –∫–æ—ç—Ñ—Ñ–∏—Ü–µ–Ω—Ç –æ–ø—ã—Ç–∞, –º–Ω–æ–∂–∏—Ç–µ–ª—å –û–∑–∏—Ä–∏—Å–∞"""
    coefficient_gold, probability_chest, coefficient_exp = effects.before_award(name)
    effects.addition_reward(name)
    hero.gold_receive(int(name['gold'] * event_dragon * coefficient_gold))
    hero.statistics_up_gold(int(name['gold'] * event_dragon * coefficient_gold))
    hero.exp_receive(int(name['exp'] * coefficient_exp * event_dragon))
    inventory.give_chest(1, 50, name['lvl'], probability_chest)
    hero.defence_load()
    information.pause()
